"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** @private */
var ObjectTools = /** @class */ (function () {
    function ObjectTools() {
    }
    ObjectTools.map = function (obj, fn) {
        // tslint:disable-next-line:no-object-literal-type-assertion
        var mapped = Object.entries(obj).map(function (_a) {
            var key = _a[0], value = _a[1];
            var _b;
            return (_b = {}, _b[key] = fn(value, key), _b);
        });
        return Object.assign.apply(Object, [{}].concat(mapped));
    };
    ObjectTools.fromArray = function (arr, fn) {
        return Object.assign.apply(Object, [{}].concat(arr.map(fn)));
    };
    ObjectTools.indexBy = function (arr, keyFn) {
        if (typeof keyFn !== 'function') {
            var key_1 = keyFn;
            keyFn = (function (value) { return value[key_1].toString(); });
        }
        return this.fromArray(arr, function (val) {
            var _a;
            return (_a = {}, _a[keyFn(val)] = val, _a);
        });
    };
    ObjectTools.forEach = function (obj, fn) {
        Object.entries(obj).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            return fn(value, key);
        });
    };
    ObjectTools.entriesToObject = function (obj) {
        return this.fromArray(obj, function (_a) {
            var key = _a[0], val = _a[1];
            var _b;
            return (_b = {}, _b[key] = val, _b);
        });
    };
    return ObjectTools;
}());
exports.default = ObjectTools;
//# sourceMappingURL=ObjectTools.js.map