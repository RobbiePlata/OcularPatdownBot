"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @private */
var ObjectTools = /** @class */ (function () {
    function ObjectTools() {
    }
    ObjectTools.map = function (obj, fn) {
        // tslint:disable-next-line:no-object-literal-type-assertion
        var mapped = Object.entries(obj).map(function (_a) {
            var _b = __read(_a, 2), key = _b[0], value = _b[1];
            var _c;
            return (_c = {}, _c[key] = fn(value, key), _c);
        });
        return Object.assign.apply(Object, __spread([{}], mapped));
    };
    ObjectTools.keys = function (o) {
        return Object.keys(o);
    };
    ObjectTools.fromArray = function (arr, fn) {
        return Object.assign.apply(Object, __spread([{}], arr.map(fn)));
    };
    ObjectTools.forEach = function (obj, fn) {
        Object.entries(obj).forEach(function (_a) {
            var _b = __read(_a, 2), key = _b[0], value = _b[1];
            return fn(value, key);
        });
    };
    return ObjectTools;
}());
exports.default = ObjectTools;
//# sourceMappingURL=ObjectTools.js.map