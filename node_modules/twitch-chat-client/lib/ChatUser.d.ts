import ChatClient from './ChatClient';
/**
 * A user in chat.
 */
export default class ChatUser {
    private readonly _userData;
    private readonly _userName;
    private readonly _client;
    /** @private */
    constructor(userName: string, userData: Map<string, string> | undefined, client: ChatClient);
    /**
     * The name of the user.
     */
    readonly userName: string;
    /**
     * The display name of the user.
     */
    readonly displayName: string;
    /**
     * The color the user chose to display in chat.
     *
     * Returns null if the user didn't choose a color. In this case, you should generate your own color.
     */
    readonly color: string | undefined;
    /**
     * The badges of the user. Returned as a map that maps the badge category to the detail.
     */
    readonly badges: Map<any, any>;
    /**
     * The ID of the user.
     */
    readonly userId: string | undefined;
    /**
     * The type of the user.
     * Possible values are undefined, 'mod', 'global_mod', 'admin' and 'staff'.
     */
    readonly userType: string | undefined;
    /**
     * Whether the user is subscribed to the channel.
     */
    readonly isSubscriber: boolean;
    /**
     * Whether the user is a moderator of the channel.
     */
    readonly isMod: boolean;
    /**
     * Retrieves more data about the user.
     *
     * @deprecated Use the `twitch` methods directly instead.
     */
    getUser(): Promise<import("twitch/lib/API/User/User").default | null>;
}
